//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace ITS.TTS {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="MainSoap", Namespace="http://www.progamma.com")]
    public partial class Main : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ID_DOExecuteOperationCompleted;
        
        private System.Threading.SendOrPostCallback ID_ReceiveFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback ID_SendFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateBatchOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback PromoteBatchOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateBatchOrderAdditionOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateMonolevelBOAdditionOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreatePackagingOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateShippingOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback PromoteShippingOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddShippingOrderBOMOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Main() {
            this.Url = global::ITS.Properties.Settings.Default.ITS_TTS_Main;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ID_DOExecuteCompletedEventHandler ID_DOExecuteCompleted;
        
        /// <remarks/>
        public event ID_ReceiveFileCompletedEventHandler ID_ReceiveFileCompleted;
        
        /// <remarks/>
        public event ID_SendFileCompletedEventHandler ID_SendFileCompleted;
        
        /// <remarks/>
        public event CreateBatchOrderCompletedEventHandler CreateBatchOrderCompleted;
        
        /// <remarks/>
        public event PromoteBatchOrderCompletedEventHandler PromoteBatchOrderCompleted;
        
        /// <remarks/>
        public event CreateBatchOrderAdditionCompletedEventHandler CreateBatchOrderAdditionCompleted;
        
        /// <remarks/>
        public event CreateMonolevelBOAdditionCompletedEventHandler CreateMonolevelBOAdditionCompleted;
        
        /// <remarks/>
        public event CreatePackagingOrderCompletedEventHandler CreatePackagingOrderCompleted;
        
        /// <remarks/>
        public event CreateShippingOrderCompletedEventHandler CreateShippingOrderCompleted;
        
        /// <remarks/>
        public event PromoteShippingOrderCompletedEventHandler PromoteShippingOrderCompleted;
        
        /// <remarks/>
        public event AddShippingOrderBOMCompletedEventHandler AddShippingOrderBOMCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.progamma.com/ID_DOExecute", RequestNamespace="http://www.progamma.com", ResponseNamespace="http://www.progamma.com")]
        public object ID_DOExecute(string DOXML, string MethodName, string ClassName, object[] Params, bool RetDoc, ref string RetDocXML) {
            object[] results = this.Invoke("ID_DOExecute", new object[] {
                        DOXML,
                        MethodName,
                        ClassName,
                        Params,
                        RetDoc,
                        RetDocXML});
            RetDocXML = ((string)(results[1]));
            return ((object)(results[0]));
        }
        
        /// <remarks/>
        public void ID_DOExecuteAsync(string DOXML, string MethodName, string ClassName, object[] Params, bool RetDoc, string RetDocXML) {
            this.ID_DOExecuteAsync(DOXML, MethodName, ClassName, Params, RetDoc, RetDocXML, null);
        }
        
        /// <remarks/>
        public void ID_DOExecuteAsync(string DOXML, string MethodName, string ClassName, object[] Params, bool RetDoc, string RetDocXML, object userState) {
            if ((this.ID_DOExecuteOperationCompleted == null)) {
                this.ID_DOExecuteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnID_DOExecuteOperationCompleted);
            }
            this.InvokeAsync("ID_DOExecute", new object[] {
                        DOXML,
                        MethodName,
                        ClassName,
                        Params,
                        RetDoc,
                        RetDocXML}, this.ID_DOExecuteOperationCompleted, userState);
        }
        
        private void OnID_DOExecuteOperationCompleted(object arg) {
            if ((this.ID_DOExecuteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ID_DOExecuteCompleted(this, new ID_DOExecuteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.progamma.com/ID_ReceiveFile", RequestNamespace="http://www.progamma.com", ResponseNamespace="http://www.progamma.com")]
        public string ID_ReceiveFile([System.Xml.Serialization.SoapElementAttribute(DataType="base64Binary")] byte[] FileData, string Extension) {
            object[] results = this.Invoke("ID_ReceiveFile", new object[] {
                        FileData,
                        Extension});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ID_ReceiveFileAsync(byte[] FileData, string Extension) {
            this.ID_ReceiveFileAsync(FileData, Extension, null);
        }
        
        /// <remarks/>
        public void ID_ReceiveFileAsync(byte[] FileData, string Extension, object userState) {
            if ((this.ID_ReceiveFileOperationCompleted == null)) {
                this.ID_ReceiveFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnID_ReceiveFileOperationCompleted);
            }
            this.InvokeAsync("ID_ReceiveFile", new object[] {
                        FileData,
                        Extension}, this.ID_ReceiveFileOperationCompleted, userState);
        }
        
        private void OnID_ReceiveFileOperationCompleted(object arg) {
            if ((this.ID_ReceiveFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ID_ReceiveFileCompleted(this, new ID_ReceiveFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.progamma.com/ID_SendFile", RequestNamespace="http://www.progamma.com", ResponseNamespace="http://www.progamma.com")]
        [return: System.Xml.Serialization.SoapElementAttribute(DataType="base64Binary")]
        public byte[] ID_SendFile(string FileName) {
            object[] results = this.Invoke("ID_SendFile", new object[] {
                        FileName});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void ID_SendFileAsync(string FileName) {
            this.ID_SendFileAsync(FileName, null);
        }
        
        /// <remarks/>
        public void ID_SendFileAsync(string FileName, object userState) {
            if ((this.ID_SendFileOperationCompleted == null)) {
                this.ID_SendFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnID_SendFileOperationCompleted);
            }
            this.InvokeAsync("ID_SendFile", new object[] {
                        FileName}, this.ID_SendFileOperationCompleted, userState);
        }
        
        private void OnID_SendFileOperationCompleted(object arg) {
            if ((this.ID_SendFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ID_SendFileCompleted(this, new ID_SendFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.progamma.com/CreateBatchOrder", RequestNamespace="http://www.progamma.com", ResponseNamespace="http://www.progamma.com")]
        public string CreateBatchOrder(
                    string pUserName, 
                    string pPassword, 
                    string pPackagingOrderId, 
                    string pLotNumber, 
                    int pLineEntityId, 
                    int pInputPriority, 
                    string pDestCountry, 
                    System.DateTime pSchedTimestamp, 
                    System.DateTime pExpiryTimestamp, 
                    string pTargetGTIN, 
                    string pTargetInternalCode, 
                    int pTargetQuantity, 
                    string pLowestGTIN, 
                    string pLowestInternalCode, 
                    string pHighestGTIN, 
                    string pHighestInternalCode, 
                    string pAdditionalInfos, 
                    bool pIsPromoted) {
            object[] results = this.Invoke("CreateBatchOrder", new object[] {
                        pUserName,
                        pPassword,
                        pPackagingOrderId,
                        pLotNumber,
                        pLineEntityId,
                        pInputPriority,
                        pDestCountry,
                        pSchedTimestamp,
                        pExpiryTimestamp,
                        pTargetGTIN,
                        pTargetInternalCode,
                        pTargetQuantity,
                        pLowestGTIN,
                        pLowestInternalCode,
                        pHighestGTIN,
                        pHighestInternalCode,
                        pAdditionalInfos,
                        pIsPromoted});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateBatchOrderAsync(
                    string pUserName, 
                    string pPassword, 
                    string pPackagingOrderId, 
                    string pLotNumber, 
                    int pLineEntityId, 
                    int pInputPriority, 
                    string pDestCountry, 
                    System.DateTime pSchedTimestamp, 
                    System.DateTime pExpiryTimestamp, 
                    string pTargetGTIN, 
                    string pTargetInternalCode, 
                    int pTargetQuantity, 
                    string pLowestGTIN, 
                    string pLowestInternalCode, 
                    string pHighestGTIN, 
                    string pHighestInternalCode, 
                    string pAdditionalInfos, 
                    bool pIsPromoted) {
            this.CreateBatchOrderAsync(pUserName, pPassword, pPackagingOrderId, pLotNumber, pLineEntityId, pInputPriority, pDestCountry, pSchedTimestamp, pExpiryTimestamp, pTargetGTIN, pTargetInternalCode, pTargetQuantity, pLowestGTIN, pLowestInternalCode, pHighestGTIN, pHighestInternalCode, pAdditionalInfos, pIsPromoted, null);
        }
        
        /// <remarks/>
        public void CreateBatchOrderAsync(
                    string pUserName, 
                    string pPassword, 
                    string pPackagingOrderId, 
                    string pLotNumber, 
                    int pLineEntityId, 
                    int pInputPriority, 
                    string pDestCountry, 
                    System.DateTime pSchedTimestamp, 
                    System.DateTime pExpiryTimestamp, 
                    string pTargetGTIN, 
                    string pTargetInternalCode, 
                    int pTargetQuantity, 
                    string pLowestGTIN, 
                    string pLowestInternalCode, 
                    string pHighestGTIN, 
                    string pHighestInternalCode, 
                    string pAdditionalInfos, 
                    bool pIsPromoted, 
                    object userState) {
            if ((this.CreateBatchOrderOperationCompleted == null)) {
                this.CreateBatchOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateBatchOrderOperationCompleted);
            }
            this.InvokeAsync("CreateBatchOrder", new object[] {
                        pUserName,
                        pPassword,
                        pPackagingOrderId,
                        pLotNumber,
                        pLineEntityId,
                        pInputPriority,
                        pDestCountry,
                        pSchedTimestamp,
                        pExpiryTimestamp,
                        pTargetGTIN,
                        pTargetInternalCode,
                        pTargetQuantity,
                        pLowestGTIN,
                        pLowestInternalCode,
                        pHighestGTIN,
                        pHighestInternalCode,
                        pAdditionalInfos,
                        pIsPromoted}, this.CreateBatchOrderOperationCompleted, userState);
        }
        
        private void OnCreateBatchOrderOperationCompleted(object arg) {
            if ((this.CreateBatchOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateBatchOrderCompleted(this, new CreateBatchOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.progamma.com/PromoteBatchOrder", RequestNamespace="http://www.progamma.com", ResponseNamespace="http://www.progamma.com")]
        public string PromoteBatchOrder(string pUserName, string pPassword, string pPackagingOrderId) {
            object[] results = this.Invoke("PromoteBatchOrder", new object[] {
                        pUserName,
                        pPassword,
                        pPackagingOrderId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PromoteBatchOrderAsync(string pUserName, string pPassword, string pPackagingOrderId) {
            this.PromoteBatchOrderAsync(pUserName, pPassword, pPackagingOrderId, null);
        }
        
        /// <remarks/>
        public void PromoteBatchOrderAsync(string pUserName, string pPassword, string pPackagingOrderId, object userState) {
            if ((this.PromoteBatchOrderOperationCompleted == null)) {
                this.PromoteBatchOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPromoteBatchOrderOperationCompleted);
            }
            this.InvokeAsync("PromoteBatchOrder", new object[] {
                        pUserName,
                        pPassword,
                        pPackagingOrderId}, this.PromoteBatchOrderOperationCompleted, userState);
        }
        
        private void OnPromoteBatchOrderOperationCompleted(object arg) {
            if ((this.PromoteBatchOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PromoteBatchOrderCompleted(this, new PromoteBatchOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.progamma.com/CreateBatchOrderAddition", RequestNamespace="http://www.progamma.com", ResponseNamespace="http://www.progamma.com")]
        public string CreateBatchOrderAddition(string pUserName, string pPassword, string pPckOrderId, int pTargetQtyAddition) {
            object[] results = this.Invoke("CreateBatchOrderAddition", new object[] {
                        pUserName,
                        pPassword,
                        pPckOrderId,
                        pTargetQtyAddition});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateBatchOrderAdditionAsync(string pUserName, string pPassword, string pPckOrderId, int pTargetQtyAddition) {
            this.CreateBatchOrderAdditionAsync(pUserName, pPassword, pPckOrderId, pTargetQtyAddition, null);
        }
        
        /// <remarks/>
        public void CreateBatchOrderAdditionAsync(string pUserName, string pPassword, string pPckOrderId, int pTargetQtyAddition, object userState) {
            if ((this.CreateBatchOrderAdditionOperationCompleted == null)) {
                this.CreateBatchOrderAdditionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateBatchOrderAdditionOperationCompleted);
            }
            this.InvokeAsync("CreateBatchOrderAddition", new object[] {
                        pUserName,
                        pPassword,
                        pPckOrderId,
                        pTargetQtyAddition}, this.CreateBatchOrderAdditionOperationCompleted, userState);
        }
        
        private void OnCreateBatchOrderAdditionOperationCompleted(object arg) {
            if ((this.CreateBatchOrderAdditionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateBatchOrderAdditionCompleted(this, new CreateBatchOrderAdditionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.progamma.com/CreateMonolevelBOAddition", RequestNamespace="http://www.progamma.com", ResponseNamespace="http://www.progamma.com")]
        public string CreateMonolevelBOAddition(string pUserName, string pPassword, string pPckOrderId, int pLevelItemTypeId, int pLevelQtyAddition) {
            object[] results = this.Invoke("CreateMonolevelBOAddition", new object[] {
                        pUserName,
                        pPassword,
                        pPckOrderId,
                        pLevelItemTypeId,
                        pLevelQtyAddition});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateMonolevelBOAdditionAsync(string pUserName, string pPassword, string pPckOrderId, int pLevelItemTypeId, int pLevelQtyAddition) {
            this.CreateMonolevelBOAdditionAsync(pUserName, pPassword, pPckOrderId, pLevelItemTypeId, pLevelQtyAddition, null);
        }
        
        /// <remarks/>
        public void CreateMonolevelBOAdditionAsync(string pUserName, string pPassword, string pPckOrderId, int pLevelItemTypeId, int pLevelQtyAddition, object userState) {
            if ((this.CreateMonolevelBOAdditionOperationCompleted == null)) {
                this.CreateMonolevelBOAdditionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateMonolevelBOAdditionOperationCompleted);
            }
            this.InvokeAsync("CreateMonolevelBOAddition", new object[] {
                        pUserName,
                        pPassword,
                        pPckOrderId,
                        pLevelItemTypeId,
                        pLevelQtyAddition}, this.CreateMonolevelBOAdditionOperationCompleted, userState);
        }
        
        private void OnCreateMonolevelBOAdditionOperationCompleted(object arg) {
            if ((this.CreateMonolevelBOAdditionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateMonolevelBOAdditionCompleted(this, new CreateMonolevelBOAdditionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.progamma.com/CreatePackagingOrder", RequestNamespace="http://www.progamma.com", ResponseNamespace="http://www.progamma.com")]
        public string CreatePackagingOrder(
                    string pUserName, 
                    string pPassword, 
                    string pPackagingOrderId, 
                    bool pIsPromoted, 
                    string pLotNumber, 
                    int pInputPriority, 
                    System.DateTime pSchedTimestamp, 
                    System.DateTime pExpiryTimestamp, 
                    int pTargetQuantity, 
                    string pUnitOfMeasure, 
                    int pLineEntityId, 
                    string pRecipeId, 
                    string pGTIN0, 
                    string pGTIN1, 
                    string pGTIN2, 
                    string pGTIN3, 
                    string pGTIN4, 
                    int pSizeLevel1, 
                    int pSizeLevel2, 
                    int pSizeLevel3, 
                    int pSizeLevel4, 
                    string pTwoDidentifier, 
                    string pBulkBatchNumber1, 
                    string pBulkBatchNumber2, 
                    string pBulkBatchNumber3, 
                    string pBulkBatchNumber4, 
                    string pGenisysNumber, 
                    string pManufactDateFmt1, 
                    string pManufactDateFmt2, 
                    string pManufactDateFmt3, 
                    string pManufactDateFmt4, 
                    string pManufactDate1, 
                    string pManufactDate2, 
                    string pManufactDate3, 
                    string pManufactDate4, 
                    string pMaterialDescription, 
                    string pNhrncare1, 
                    string pNhrncare2, 
                    string pNhrncare3, 
                    string pNhrncare4, 
                    string pMoreDatasetRecs, 
                    string pMoreNvseparator, 
                    string pMoreRecseparator) {
            object[] results = this.Invoke("CreatePackagingOrder", new object[] {
                        pUserName,
                        pPassword,
                        pPackagingOrderId,
                        pIsPromoted,
                        pLotNumber,
                        pInputPriority,
                        pSchedTimestamp,
                        pExpiryTimestamp,
                        pTargetQuantity,
                        pUnitOfMeasure,
                        pLineEntityId,
                        pRecipeId,
                        pGTIN0,
                        pGTIN1,
                        pGTIN2,
                        pGTIN3,
                        pGTIN4,
                        pSizeLevel1,
                        pSizeLevel2,
                        pSizeLevel3,
                        pSizeLevel4,
                        pTwoDidentifier,
                        pBulkBatchNumber1,
                        pBulkBatchNumber2,
                        pBulkBatchNumber3,
                        pBulkBatchNumber4,
                        pGenisysNumber,
                        pManufactDateFmt1,
                        pManufactDateFmt2,
                        pManufactDateFmt3,
                        pManufactDateFmt4,
                        pManufactDate1,
                        pManufactDate2,
                        pManufactDate3,
                        pManufactDate4,
                        pMaterialDescription,
                        pNhrncare1,
                        pNhrncare2,
                        pNhrncare3,
                        pNhrncare4,
                        pMoreDatasetRecs,
                        pMoreNvseparator,
                        pMoreRecseparator});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreatePackagingOrderAsync(
                    string pUserName, 
                    string pPassword, 
                    string pPackagingOrderId, 
                    bool pIsPromoted, 
                    string pLotNumber, 
                    int pInputPriority, 
                    System.DateTime pSchedTimestamp, 
                    System.DateTime pExpiryTimestamp, 
                    int pTargetQuantity, 
                    string pUnitOfMeasure, 
                    int pLineEntityId, 
                    string pRecipeId, 
                    string pGTIN0, 
                    string pGTIN1, 
                    string pGTIN2, 
                    string pGTIN3, 
                    string pGTIN4, 
                    int pSizeLevel1, 
                    int pSizeLevel2, 
                    int pSizeLevel3, 
                    int pSizeLevel4, 
                    string pTwoDidentifier, 
                    string pBulkBatchNumber1, 
                    string pBulkBatchNumber2, 
                    string pBulkBatchNumber3, 
                    string pBulkBatchNumber4, 
                    string pGenisysNumber, 
                    string pManufactDateFmt1, 
                    string pManufactDateFmt2, 
                    string pManufactDateFmt3, 
                    string pManufactDateFmt4, 
                    string pManufactDate1, 
                    string pManufactDate2, 
                    string pManufactDate3, 
                    string pManufactDate4, 
                    string pMaterialDescription, 
                    string pNhrncare1, 
                    string pNhrncare2, 
                    string pNhrncare3, 
                    string pNhrncare4, 
                    string pMoreDatasetRecs, 
                    string pMoreNvseparator, 
                    string pMoreRecseparator) {
            this.CreatePackagingOrderAsync(pUserName, pPassword, pPackagingOrderId, pIsPromoted, pLotNumber, pInputPriority, pSchedTimestamp, pExpiryTimestamp, pTargetQuantity, pUnitOfMeasure, pLineEntityId, pRecipeId, pGTIN0, pGTIN1, pGTIN2, pGTIN3, pGTIN4, pSizeLevel1, pSizeLevel2, pSizeLevel3, pSizeLevel4, pTwoDidentifier, pBulkBatchNumber1, pBulkBatchNumber2, pBulkBatchNumber3, pBulkBatchNumber4, pGenisysNumber, pManufactDateFmt1, pManufactDateFmt2, pManufactDateFmt3, pManufactDateFmt4, pManufactDate1, pManufactDate2, pManufactDate3, pManufactDate4, pMaterialDescription, pNhrncare1, pNhrncare2, pNhrncare3, pNhrncare4, pMoreDatasetRecs, pMoreNvseparator, pMoreRecseparator, null);
        }
        
        /// <remarks/>
        public void CreatePackagingOrderAsync(
                    string pUserName, 
                    string pPassword, 
                    string pPackagingOrderId, 
                    bool pIsPromoted, 
                    string pLotNumber, 
                    int pInputPriority, 
                    System.DateTime pSchedTimestamp, 
                    System.DateTime pExpiryTimestamp, 
                    int pTargetQuantity, 
                    string pUnitOfMeasure, 
                    int pLineEntityId, 
                    string pRecipeId, 
                    string pGTIN0, 
                    string pGTIN1, 
                    string pGTIN2, 
                    string pGTIN3, 
                    string pGTIN4, 
                    int pSizeLevel1, 
                    int pSizeLevel2, 
                    int pSizeLevel3, 
                    int pSizeLevel4, 
                    string pTwoDidentifier, 
                    string pBulkBatchNumber1, 
                    string pBulkBatchNumber2, 
                    string pBulkBatchNumber3, 
                    string pBulkBatchNumber4, 
                    string pGenisysNumber, 
                    string pManufactDateFmt1, 
                    string pManufactDateFmt2, 
                    string pManufactDateFmt3, 
                    string pManufactDateFmt4, 
                    string pManufactDate1, 
                    string pManufactDate2, 
                    string pManufactDate3, 
                    string pManufactDate4, 
                    string pMaterialDescription, 
                    string pNhrncare1, 
                    string pNhrncare2, 
                    string pNhrncare3, 
                    string pNhrncare4, 
                    string pMoreDatasetRecs, 
                    string pMoreNvseparator, 
                    string pMoreRecseparator, 
                    object userState) {
            if ((this.CreatePackagingOrderOperationCompleted == null)) {
                this.CreatePackagingOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreatePackagingOrderOperationCompleted);
            }
            this.InvokeAsync("CreatePackagingOrder", new object[] {
                        pUserName,
                        pPassword,
                        pPackagingOrderId,
                        pIsPromoted,
                        pLotNumber,
                        pInputPriority,
                        pSchedTimestamp,
                        pExpiryTimestamp,
                        pTargetQuantity,
                        pUnitOfMeasure,
                        pLineEntityId,
                        pRecipeId,
                        pGTIN0,
                        pGTIN1,
                        pGTIN2,
                        pGTIN3,
                        pGTIN4,
                        pSizeLevel1,
                        pSizeLevel2,
                        pSizeLevel3,
                        pSizeLevel4,
                        pTwoDidentifier,
                        pBulkBatchNumber1,
                        pBulkBatchNumber2,
                        pBulkBatchNumber3,
                        pBulkBatchNumber4,
                        pGenisysNumber,
                        pManufactDateFmt1,
                        pManufactDateFmt2,
                        pManufactDateFmt3,
                        pManufactDateFmt4,
                        pManufactDate1,
                        pManufactDate2,
                        pManufactDate3,
                        pManufactDate4,
                        pMaterialDescription,
                        pNhrncare1,
                        pNhrncare2,
                        pNhrncare3,
                        pNhrncare4,
                        pMoreDatasetRecs,
                        pMoreNvseparator,
                        pMoreRecseparator}, this.CreatePackagingOrderOperationCompleted, userState);
        }
        
        private void OnCreatePackagingOrderOperationCompleted(object arg) {
            if ((this.CreatePackagingOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreatePackagingOrderCompleted(this, new CreatePackagingOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.progamma.com/CreateShippingOrder", RequestNamespace="http://www.progamma.com", ResponseNamespace="http://www.progamma.com")]
        public string CreateShippingOrder(string pUserName, string pPassword, string pOrderId, string pOrderType, bool pIsPromoted, System.DateTime pDeliveryTimestamp, string pOrderKind, string pSSCCExtDigit, string pSSCCGLNPrefix, int pCustomersId, string pCarrier, string pTruck, string pFreeText1, string pFreeText2, string pFreeText3) {
            object[] results = this.Invoke("CreateShippingOrder", new object[] {
                        pUserName,
                        pPassword,
                        pOrderId,
                        pOrderType,
                        pIsPromoted,
                        pDeliveryTimestamp,
                        pOrderKind,
                        pSSCCExtDigit,
                        pSSCCGLNPrefix,
                        pCustomersId,
                        pCarrier,
                        pTruck,
                        pFreeText1,
                        pFreeText2,
                        pFreeText3});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateShippingOrderAsync(string pUserName, string pPassword, string pOrderId, string pOrderType, bool pIsPromoted, System.DateTime pDeliveryTimestamp, string pOrderKind, string pSSCCExtDigit, string pSSCCGLNPrefix, int pCustomersId, string pCarrier, string pTruck, string pFreeText1, string pFreeText2, string pFreeText3) {
            this.CreateShippingOrderAsync(pUserName, pPassword, pOrderId, pOrderType, pIsPromoted, pDeliveryTimestamp, pOrderKind, pSSCCExtDigit, pSSCCGLNPrefix, pCustomersId, pCarrier, pTruck, pFreeText1, pFreeText2, pFreeText3, null);
        }
        
        /// <remarks/>
        public void CreateShippingOrderAsync(
                    string pUserName, 
                    string pPassword, 
                    string pOrderId, 
                    string pOrderType, 
                    bool pIsPromoted, 
                    System.DateTime pDeliveryTimestamp, 
                    string pOrderKind, 
                    string pSSCCExtDigit, 
                    string pSSCCGLNPrefix, 
                    int pCustomersId, 
                    string pCarrier, 
                    string pTruck, 
                    string pFreeText1, 
                    string pFreeText2, 
                    string pFreeText3, 
                    object userState) {
            if ((this.CreateShippingOrderOperationCompleted == null)) {
                this.CreateShippingOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateShippingOrderOperationCompleted);
            }
            this.InvokeAsync("CreateShippingOrder", new object[] {
                        pUserName,
                        pPassword,
                        pOrderId,
                        pOrderType,
                        pIsPromoted,
                        pDeliveryTimestamp,
                        pOrderKind,
                        pSSCCExtDigit,
                        pSSCCGLNPrefix,
                        pCustomersId,
                        pCarrier,
                        pTruck,
                        pFreeText1,
                        pFreeText2,
                        pFreeText3}, this.CreateShippingOrderOperationCompleted, userState);
        }
        
        private void OnCreateShippingOrderOperationCompleted(object arg) {
            if ((this.CreateShippingOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateShippingOrderCompleted(this, new CreateShippingOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.progamma.com/PromoteShippingOrder", RequestNamespace="http://www.progamma.com", ResponseNamespace="http://www.progamma.com")]
        public string PromoteShippingOrder(string pUserName, string pPassword, string pShippingOrderId) {
            object[] results = this.Invoke("PromoteShippingOrder", new object[] {
                        pUserName,
                        pPassword,
                        pShippingOrderId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PromoteShippingOrderAsync(string pUserName, string pPassword, string pShippingOrderId) {
            this.PromoteShippingOrderAsync(pUserName, pPassword, pShippingOrderId, null);
        }
        
        /// <remarks/>
        public void PromoteShippingOrderAsync(string pUserName, string pPassword, string pShippingOrderId, object userState) {
            if ((this.PromoteShippingOrderOperationCompleted == null)) {
                this.PromoteShippingOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPromoteShippingOrderOperationCompleted);
            }
            this.InvokeAsync("PromoteShippingOrder", new object[] {
                        pUserName,
                        pPassword,
                        pShippingOrderId}, this.PromoteShippingOrderOperationCompleted, userState);
        }
        
        private void OnPromoteShippingOrderOperationCompleted(object arg) {
            if ((this.PromoteShippingOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PromoteShippingOrderCompleted(this, new PromoteShippingOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://www.progamma.com/AddShippingOrderBOM", RequestNamespace="http://www.progamma.com", ResponseNamespace="http://www.progamma.com")]
        public string AddShippingOrderBOM(string pUserName, string pPassword, string pShippingOrderId, string pGTIN, int pTargetQuantity) {
            object[] results = this.Invoke("AddShippingOrderBOM", new object[] {
                        pUserName,
                        pPassword,
                        pShippingOrderId,
                        pGTIN,
                        pTargetQuantity});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddShippingOrderBOMAsync(string pUserName, string pPassword, string pShippingOrderId, string pGTIN, int pTargetQuantity) {
            this.AddShippingOrderBOMAsync(pUserName, pPassword, pShippingOrderId, pGTIN, pTargetQuantity, null);
        }
        
        /// <remarks/>
        public void AddShippingOrderBOMAsync(string pUserName, string pPassword, string pShippingOrderId, string pGTIN, int pTargetQuantity, object userState) {
            if ((this.AddShippingOrderBOMOperationCompleted == null)) {
                this.AddShippingOrderBOMOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddShippingOrderBOMOperationCompleted);
            }
            this.InvokeAsync("AddShippingOrderBOM", new object[] {
                        pUserName,
                        pPassword,
                        pShippingOrderId,
                        pGTIN,
                        pTargetQuantity}, this.AddShippingOrderBOMOperationCompleted, userState);
        }
        
        private void OnAddShippingOrderBOMOperationCompleted(object arg) {
            if ((this.AddShippingOrderBOMCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddShippingOrderBOMCompleted(this, new AddShippingOrderBOMCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void ID_DOExecuteCompletedEventHandler(object sender, ID_DOExecuteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ID_DOExecuteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ID_DOExecuteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string RetDocXML {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void ID_ReceiveFileCompletedEventHandler(object sender, ID_ReceiveFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ID_ReceiveFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ID_ReceiveFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void ID_SendFileCompletedEventHandler(object sender, ID_SendFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ID_SendFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ID_SendFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void CreateBatchOrderCompletedEventHandler(object sender, CreateBatchOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateBatchOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateBatchOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void PromoteBatchOrderCompletedEventHandler(object sender, PromoteBatchOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PromoteBatchOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PromoteBatchOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void CreateBatchOrderAdditionCompletedEventHandler(object sender, CreateBatchOrderAdditionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateBatchOrderAdditionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateBatchOrderAdditionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void CreateMonolevelBOAdditionCompletedEventHandler(object sender, CreateMonolevelBOAdditionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateMonolevelBOAdditionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateMonolevelBOAdditionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void CreatePackagingOrderCompletedEventHandler(object sender, CreatePackagingOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreatePackagingOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreatePackagingOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void CreateShippingOrderCompletedEventHandler(object sender, CreateShippingOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateShippingOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateShippingOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void PromoteShippingOrderCompletedEventHandler(object sender, PromoteShippingOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PromoteShippingOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PromoteShippingOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void AddShippingOrderBOMCompletedEventHandler(object sender, AddShippingOrderBOMCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddShippingOrderBOMCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddShippingOrderBOMCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591